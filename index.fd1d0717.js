!function(e,t){"function"==typeof define?define(e,t):"undefined"!=typeof module&&module.exports?module.exports=t():this[e]=t()}("Select",(function(){"use strict";class e{constructor(e){this.props=e||{},this.state={},this.refs={},this.$disposables={mounted:[],updated:[]}}$defer(e,t){this.$disposables[e].push(t)}$dispose(e){this.$disposables[e].reverse().forEach((e=>e())),this.$disposables[e].length=0}componentMount(e){return this.$el&&this.componentUnmount(),this.componentWillMount(),this.$el=e&&e.el||document.createElement("div"),this.$defer("mounted",(()=>{this.$el.innerHTML="",this.$el=null})),this.forceUpdate(),this.componentDidMount(),this}componentWillMount(){}componentDidMount(){}componentUnmount(){return this.componentWillUnmount(),this.$dispose("mounted"),this.componentDidUnmount(),this}componentWillUnmount(){}componentDidUnmount(){}setState(e,t){let s=this.state,n="function"==typeof e?e(s,this.props):e;return this.state=Object.assign(s,n),this.shouldComponentUpdate(s,n)&&this.forceUpdate(),t&&t.call(this),this}forceUpdate(){return this.componentUpdate(this.props,this.state),this}shouldComponentUpdate(e,t){return e!==t}componentUpdate(e,t){this.$el&&(this.componentWillUpdate(e,t),this.$dispose("updated"),this.$el.innerHTML=this.render(e,t),this.refs=Array.from(this.$el.querySelectorAll("[ref]")).reduce((function(e,t){return e[t.getAttribute("ref")]=t,e}),{}),this.componentDidUpdate(e,t))}componentWillUpdate(e,t){}render(e,t){return""}componentDidUpdate(e,t){}}class t extends e{constructor(e){super(e),this.state={query:"",dataset:this.props.dataset||[],selected:this.props.selected},this.onQueryChanged=this.onQueryChanged.bind(this),this.onItemClicked=this.onItemClicked.bind(this)}onQueryChanged(e){const t=e.target.value,s=new RegExp(t,"gi"),n=(this.props.dataset||[]).filter((e=>s.test(e.text||e.value||"")));this.setState((e=>({query:t,dataset:n})))}onItemClicked(e){const t=e.target.closest("li").dataset.index,s=this.state.dataset[t];this.props.onSelected&&this.props.onSelected(s),this.setState((e=>({selected:s})))}render(e,t){return 0===t.dataset.length?`<input ref="query" type="text" value="${t.query}" class="select__query">\n                  <span class="select__query_noresult">No results found</span>`:`<input ref="query" type="text" value="${t.query}" class="select__query">\n                  <ul ref="list" class="select__list">\n                      ${t.dataset.map((function(e,s){return`\n                                  <li class="select__item ${e===t.selected?"select__item--selected":""}" data-index="${s}" data-value="${e.value||e.text}">\n                                      <i class="select__item_icon fa ${e.icon||""}" aria-hidden="true"></i>\n                                      <span class="select__item_text">${e.text||e.value}</span>\n                                  </li>`})).join("")}\n                  </ul>`}componentDidUpdate(){const e=this.refs.query;e.addEventListener("change",this.onQueryChanged),this.$defer("updated",(()=>e.removeEventListener("change",this.onQueryChanged)));const t=this.refs.list;t.addEventListener("click",this.onItemClicked),this.$defer("updated",(()=>t.removeEventListener("click",this.onItemClicked)))}}return class extends e{constructor(e){super(e),this.state={placeholder:this.props.placeholder||"",expanded:!1},this.onDocumentClick=this.onDocumentClick.bind(this),this.onComponentClick=this.onComponentClick.bind(this),this.onToolboxClick=this.onToolboxClick.bind(this),this.search=new t(Object.assign({},this.props,{onSelected:e=>{this.props.onSelected&&this.props.onSelected(e),this.setState((t=>({placeholder:e.text||e.value,selected:e,expanded:!1})))}}))}onDocumentClick(e){this.setState((e=>({expanded:!1})))}onComponentClick(e){e.stopPropagation()}onToolboxClick(e){this.setState((e=>({expanded:!e.expanded})),(()=>{this.state.expanded&&this.search.refs.query.focus()}))}render(e,t){return`<div class="select__box">\n                  <div ref="toolbox" class="select__toolbox">\n                      <i class="select__arrow" aria-hidden="true"></i>\n                      <div class="select__label">${t.placeholder}</div>\n                  </div>\n                  <div ref="dropdown" class="select__dropdown ${t.expanded?"select__dropdown--show":""}"></div>\n              </div>`}componentDidMount(){document.body.addEventListener("click",this.onDocumentClick),this.$defer("mounted",(()=>document.body.removeEventListener("click",this.onDocumentClick))),this.$el.addEventListener("click",this.onComponentClick),this.$defer("mounted",(()=>this.$el.removeEventListener("click",this.onComponentClick)))}componentDidUnmount(){this.search.componentUnmount()}componentDidUpdate(){const e=this.refs.toolbox;e.addEventListener("click",this.onToolboxClick),this.$defer("updated",(()=>e.removeEventListener("click",this.onToolboxClick))),this.search.componentMount({el:this.refs.dropdown})}}}));const source=[{icon:"fa-font",value:"Abril Fatface"},{icon:"fa-font",value:"Allura"},{icon:"fa-font",value:"Amatic SC"}];let select=Array.from(document.querySelectorAll('[ref="select"]')).map((e=>new Select({placeholder:"Select Font",dataset:source,onSelected:e=>console.log(e)}).componentMount({el:e})));
//# sourceMappingURL=index.fd1d0717.js.map
